apply plugin: 'com.android.application'
apply plugin: 'com.taobao.atlas'
apply plugin: 'com.taobao.atlas.dexpatch'
apply from: 'dexPatchWraper.gradle'


def apVersion = getEnvValue("apVersion", "");
android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion

    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {

        applicationId "com.dhc.flyabbit"

        minSdkVersion rootProject.ext.android.minSdkVersion

        targetSdkVersion rootProject.ext.android.targetSdkVersion

        versionCode rootProject.ext.android.versionCode

        versionName APP_VERSION

        javaCompileOptions {

            annotationProcessorOptions {

                arguments = [moduleName: project.getName()]

            }

        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        release {

            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

    }


    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
        resolutionStrategy.force rootProject.ext.dependencies["annotations"]
        resolutionStrategy.force rootProject.ext.dependencies["support-v4"]
        resolutionStrategy.force rootProject.ext.dependencies["appcompat-v7"]
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false

    }
    aaptOptions.cruncherEnabled = false

    aaptOptions.useNewCruncher = false
    // why do not there
//    dexOptions {
//        jumboMode true
//        javaMaxHeapSize '4g'
//    }


//    compileOptions {
//
//        sourceCompatibility JavaVersion.VERSION_1_8
//
//        targetCompatibility JavaVersion.VERSION_1_8
//
//    }
    dexOptions {
        jumboMode true
        //jenkins上使用有问题
        //javaMaxHeapSize "4g"
        preDexLibraries false
    }
}

String getEnvValue(key, defValue) {
    def val = System.getProperty(key);
    if (null != val) {
        return val;
    }
    val = System.getenv(key);
    if (null != val) {
        return val;
    }
    return defValue;
}



atlas {

    atlasEnabled true
    tBuildConfig {
        autoStartBundles = ['com.dhc.flyabbit.gank'] //自启动bundle配置
        autoStartBundles = ['com.dhc.flyabbit.home'] //自启动bundle配置
        autoStartBundles = ['com.dhc.flyabbit.my'] //自启动bundle配置
        outOfApkBundles = ['photoview']
//        outOfApkBundles = ['remotebundle']
//        preLaunch = 'com.taobao.demo.DemoPreLaunch'
        classInject false
//        dataBindingBundles = ['com.taobao.databindbundle']
    }

    manifestOptions {
        addAtlasProxyComponents true
    }


    patchConfigs {
        debug {
            createTPatch true
        }
    }


    buildTypes {
        debug {
            if (apVersion) {
                baseApDependency "com.taobao.android.atlasdemo:AP-debug:${apVersion}@ap"
                patchConfig patchConfigs.debug
            }
        }
    }
}




dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile rootProject.ext.dependencies["junit"]
    provided rootProject.ext.dependencies["javax.annotation"]
    debugCompile rootProject.ext.dependencies["canary-debug"]
    testCompile rootProject.ext.dependencies["canary-test"]
    releaseCompile rootProject.ext.dependencies["canary-release"]
    //dagger2的apt注解
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    //阿里的Arouter的注解
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]


    compile(rootProject.ext.lib_atlas_core) {
        transitive = true
    }

    compile rootProject.ext.lib_atlas_update
    //atlas
    if (isApp.toBoolean()) {
        compile(rootProject.ext.dependencies["homelib"]) {
            exclude module: 'library'
        }
        compile(rootProject.ext.dependencies["mylib"]) {
            exclude module: 'library'
        }
        compile(rootProject.ext.dependencies["girlslib"]) {
            exclude module: 'library'
        }
        compile project(':library')
    } else {
        bundleCompile project(':my')
        bundleCompile project(':home')
        bundleCompile project(':girls')
        bundleCompile project(':photoview')
        compile project(':library')

//        providedCompile project(':girls')
    }
    compile project(':activitygroupcompat')
}
