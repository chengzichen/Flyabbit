//if (isApp.toBoolean()) {
//    apply plugin: 'com.android.application'
//} else {
//}
apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    if (isApp.toBoolean()) {
        configurations.all {
            resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
        }
    }
    sourceSets {
        main {
            if (isApp.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
                java {
                    exclude 'src/main/debug/**'
                    exclude '**/debug/**.java'
                    exclude 'src/main/**/res/layout/find_activity_debug.xml'
                }
            }
        }
    }
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //delete  fail im app
//        if (isApp.toBoolean()) {
//            applicationId "com.dhc.flyabbit.rn"
//            multiDexEnabled true
//        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    retrolambda {
        javaVersion JavaVersion.VERSION_1_7
    }
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project(':library')

    //dagger2的apt注解
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]

    //阿里的Arouter的注解
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]



}
